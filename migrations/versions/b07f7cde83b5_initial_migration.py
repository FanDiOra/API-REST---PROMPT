"""Initial migration.

Revision ID: b07f7cde83b5
Revises: 
Create Date: 2024-07-05 10:08:38.232114

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b07f7cde83b5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstname', sa.String(length=64), nullable=True),
    sa.Column('lastname', sa.String(length=64), nullable=True),
    sa.Column('login', sa.String(length=64), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=64), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('prompt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('edit_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('note_value', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('prompt_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['prompt_id'], ['prompt.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vote_value', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('prompt_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['prompt_id'], ['prompt.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('Note')
    op.drop_table('User')
    op.drop_table('Vote')
    op.drop_table('Group')
    op.drop_table('Prompt')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Prompt',
    sa.Column('promptid', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('1000.00'), autoincrement=False, nullable=False),
    sa.Column('creationdate', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('editdate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['promptid'], ['User.userid'], name='fk_user_prompt'),
    sa.PrimaryKeyConstraint('promptid', name='Prompt_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Group',
    sa.Column('groupid', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('groupid', name='Group_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Vote',
    sa.Column('voteid', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('votevalue', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('userid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('promptid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['promptid'], ['Prompt.promptid'], name='fk_prompt'),
    sa.ForeignKeyConstraint(['promptid'], ['Prompt.promptid'], name='fk_prompt_vote'),
    sa.ForeignKeyConstraint(['userid'], ['User.userid'], name='fk_user'),
    sa.ForeignKeyConstraint(['userid'], ['User.userid'], name='fk_user_vote'),
    sa.PrimaryKeyConstraint('voteid', name='Vote_pkey')
    )
    op.create_table('User',
    sa.Column('userid', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('login', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('admin', 'user', name='user_role'), autoincrement=False, nullable=False),
    sa.Column('groupid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['groupid'], ['Group.groupid'], name='fk_group'),
    sa.ForeignKeyConstraint(['groupid'], ['Group.groupid'], name='fk_group_user'),
    sa.PrimaryKeyConstraint('userid', name='User_pkey'),
    sa.UniqueConstraint('login', name='User_login_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Note',
    sa.Column('noteid', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('notevalue', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('userid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('promptid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['promptid'], ['Prompt.promptid'], name='fk_prompt_note'),
    sa.ForeignKeyConstraint(['userid'], ['User.userid'], name='fk_user_note'),
    sa.PrimaryKeyConstraint('noteid', name='Note_pkey')
    )
    op.drop_table('vote')
    op.drop_table('note')
    op.drop_table('prompt')
    op.drop_table('user')
    op.drop_table('group')
    # ### end Alembic commands ###
